{"version":3,"file":"static/js/940.25570334.chunk.js","mappings":"qSAEaA,EAAgBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4OCA1BH,EAAgBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4ZAmB1BC,EAAuBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0PAgBjCG,EAAaL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4G,mBC7BpB,SAASK,EAASC,GAAa,IAADC,EAAAC,EAATC,EAAKH,EAALG,MAClC,OACEC,EAAAA,EAAAA,MAACb,EAAa,CAAAc,SAAA,EACZC,EAAAA,EAAAA,KAAA,OACEC,IACEJ,EAAMK,YAAW,kCAAAC,OACqBN,EAAMK,aAAW,GAAAC,OAChDC,GAETC,IAAI,GACJC,MAAM,WAERR,EAAAA,EAAAA,MAACT,EAAoB,CAAAU,SAAA,EACnBD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACGF,EAAMU,MAAM,KAAqB,QAAnBZ,EAACE,EAAMW,oBAAY,IAAAb,OAAA,EAAlBA,EAAoBc,MAAM,EAAG,GAAG,QAElDX,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,iBAAgBF,EAAMa,aAAe,GAAM,KAAKC,QAAQ,GAAG,SAC9DX,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIF,EAAMe,YACVd,EAAAA,EAAAA,MAACP,EAAU,CAAAQ,SAAA,CAAC,SAEG,QAAbH,EAACC,EAAMgB,cAAM,IAAAjB,OAAA,EAAZA,EAAckB,KAAI,SAAAC,GAAI,OACrBjB,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAkB,IAAEgB,EAAKC,OAAhBD,EAAKE,GAAqB,YAM/C,CCnBe,SAASC,IAAS,IAADC,EAAAC,EACtBH,GAAOI,EAAAA,EAAAA,MAAPJ,GAEFK,EAAmC,QAAvBH,EAAiB,QAAjBC,GADDG,EAAAA,EAAAA,MACaC,aAAK,IAAAJ,OAAA,EAAdA,EAAgBK,YAAI,IAAAN,EAAAA,EAAI,IAC7CO,GAA2BC,EAAAA,EAAAA,GAAQC,EAAAA,GAAgBX,GAAGY,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA/C7B,EAAKgC,EAAA,GAAME,EAAKF,EAAA,GAEvB,OADAG,EAAAA,GAAAA,KAAW,CAAED,MAAAA,IACRlC,GAIHG,EAAAA,EAAAA,KAAA,OAAAD,UACED,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACiC,EAAU,CAACC,GAAIZ,EAAavB,SAAC,aAC9BC,EAAAA,EAAAA,KAACP,EAAS,CAACI,MAAOA,KAClBC,EAAAA,EAAAA,MAACb,EAAa,CAAAc,SAAA,CAAC,0BAEbC,EAAAA,EAAAA,KAACmC,EAAAA,GAAO,CAACD,GAAI,OAAQV,MAAO,CAAEF,aAAAA,GAAevB,SAAC,UAG9CC,EAAAA,EAAAA,KAACmC,EAAAA,GAAO,CAACD,GAAI,UAAWV,MAAO,CAAEF,aAAAA,GAAevB,SAAC,aAGjDC,EAAAA,EAAAA,KAACoC,EAAAA,SAAQ,CAACC,UAAUrC,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,IAAIvC,UAC7BC,EAAAA,EAAAA,KAACuC,EAAAA,GAAM,eAhBRvC,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,GAsBlB,CACA,IAAML,GAAa/C,EAAAA,EAAAA,IAAOsD,EAAAA,GAAPtD,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kG","sources":["page/movie/MovieDetails.styled.js","components/movie/movieItem.styled.js","components/movie/movieItem.jsx","page/movie/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledWrapper = styled.div`\n  margin: 50px 100px;\n  padding: 50px;\n  background-color: #8dd194c9;\n  border-radius: 6px;\n  border: 2px solid white;\n  box-shadow: 0px 4px 10px 4px gray;\n  display: grid;\n  text-decoration: none;\n  font-size: 28px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  margin: 50px 100px;\n  padding: 50px;\n  background-color: #8dd194c9;\n  border-radius: 6px;\n  border: 2px solid white;\n  box-shadow: 0px 4px 10px 4px gray;\n  img {\n    object-fit: cover;\n    border-radius: 6px;\n    max-width: 300px;\n    /* width: 100%; */\n    height: 100%;\n    border: 2px solid #ddd;\n    border-radius: 4px;\n    box-shadow: 0px 2px 6px 2px gray;\n  }\n`;\nexport const StyledKontentWrapper = styled.div`\n  display: flex;\n  padding: 50px;\n  flex-direction: column;\n  gap: 30px;\n  h2 {\n    font-weight: 500px;\n    font-size: 48px;\n    color: white;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  h3 {\n    font-size: 32px;\n  }\n`;\nexport const StyledList = styled.ul`\n  font-size: 26px;\n  margin-bottom: 10px;\n  li {\n    font-size: 20px;\n    margin: 10px;\n  }\n`;\n","import React from 'react';\nimport {\n  StyledKontentWrapper,\n  StyledList,\n  StyledWrapper,\n} from './movieItem.styled';\nimport PropTypes from 'prop-types';\nimport noposter from '../../images/noposter.jpg';\nexport default function MovieItem({ movie }) {\n  return (\n    <StyledWrapper>\n      <img\n        src={\n          movie.poster_path\n            ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n            : `${noposter}`\n        }\n        alt=\"\"\n        width=\"500px\"\n      />\n      <StyledKontentWrapper>\n        <h2>\n          {movie.title} ({movie.release_date?.slice(0, 4)})\n        </h2>\n        <p> User score: {((movie.vote_average / 10) * 100).toFixed(0)} %</p>\n        <h3>Overview</h3>\n        <p>{movie.overview}</p>\n        <StyledList>\n          Genres\n          {movie.genres?.map(item => (\n            <li key={item.id}> {item.name}</li>\n          ))}\n        </StyledList>\n      </StyledKontentWrapper>\n    </StyledWrapper>\n  );\n}\n\nMovieItem.propTypes = {\n  movie: PropTypes.oneOfType([\n    PropTypes.shape({\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      release_date: PropTypes.string,\n      vote_average: PropTypes.number,\n      overview: PropTypes.string,\n      genres: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number,\n          name: PropTypes.string,\n        })\n      ),\n    }),\n    PropTypes.array,\n  ]),\n};\n","import React, { Suspense } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { fetchMovieById } from 'services/api';\n\nimport { useHttp } from 'hooks/useHttp';\nimport { Louder } from 'components/Louder';\nimport { toast } from 'react-toastify';\nimport styled from 'styled-components';\nimport { StyledWrapper } from './MovieDetails.styled';\nimport MovieItem from 'components/movie/movieItem';\n\nexport default function Movie() {\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const [movie, , , error] = useHttp(fetchMovieById, id);\n  toast.info({ error });\n  if (!movie) {\n    return <Louder />;\n  }\n  return (\n    <div>\n      <div>\n        <StyledLink to={backLinkHref}> Return</StyledLink>\n        <MovieItem movie={movie} />\n        <StyledWrapper>\n          Additional Information\n          <NavLink to={'cast'} state={{ backLinkHref }}>\n            Cast\n          </NavLink>\n          <NavLink to={'reviews'} state={{ backLinkHref }}>\n            Reviews\n          </NavLink>\n          <Suspense fallback={<Louder />}>\n            <Outlet />\n          </Suspense>\n        </StyledWrapper>\n      </div>\n    </div>\n  );\n}\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  font-size: 32px;\n  color: #030404c9;\n  margin-left: 60px;\n`;\n"],"names":["StyledWrapper","styled","_templateObject","_taggedTemplateLiteral","StyledKontentWrapper","_templateObject2","StyledList","_templateObject3","MovieItem","_ref","_movie$release_date","_movie$genres","movie","_jsxs","children","_jsx","src","poster_path","concat","noposter","alt","width","title","release_date","slice","vote_average","toFixed","overview","genres","map","item","name","id","Movie","_location$state$from","_location$state","useParams","backLinkHref","useLocation","state","from","_useHttp","useHttp","fetchMovieById","_useHttp2","_slicedToArray","error","toast","StyledLink","to","NavLink","Suspense","fallback","Louder","Outlet","Link"],"sourceRoot":""}